version: 0.2
phases:
  install:
    run-as: root
      commands:
        - echo This is a installation
        - wget https://services.gradle.org/distributions/gradle-7.4-all.zip
        - unzip -d /opt/gradle gradle-7.4-all.zip
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - echo Executing gradle clean
      - /opt/gradle/gradle-7.4/bin/gradle clean
      - echo Executing gradle build
      - /opt/gradle/gradle-7.4/bin/gradle build
      - echo Executing gradle jar
      - /opt/gradle/gradle-7.4/bin/gradle jar
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=385860693288.dkr.ecr.us-east-1.amazonaws.com/tweetsapp
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"tweets-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - build/libs/tweetapp-0.0.1-SNAPSHOT.jar

